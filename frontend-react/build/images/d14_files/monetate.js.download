/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./cartridges/app_dune/cartridge/client/default/js/monetate.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js":
/*!**********************************************************************************!*\
  !*** ../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nmodule.exports = function (include) {\n  if (typeof include === 'function') {\n    include();\n  } else if (_typeof(include) === 'object') {\n    Object.keys(include).forEach(function (key) {\n      if (typeof include[key] === 'function') {\n        include[key]();\n      }\n    });\n  }\n};\n\n//# sourceURL=webpack:///../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js?");

/***/ }),

/***/ "./cartridges/app_dune/cartridge/client/default/js/monetate.js":
/*!*********************************************************************!*\
  !*** ./cartridges/app_dune/cartridge/client/default/js/monetate.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar processInclude = __webpack_require__(/*! base/util */ \"../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js\");\n\n// Should not be wrapped $(document).ready as this script needs to be loaded synchronously\nprocessInclude(__webpack_require__(/*! ./monetate/monetate */ \"./cartridges/app_dune/cartridge/client/default/js/monetate/monetate.js\"));\n\n//# sourceURL=webpack:///./cartridges/app_dune/cartridge/client/default/js/monetate.js?");

/***/ }),

/***/ "./cartridges/app_dune/cartridge/client/default/js/monetate/monetate.js":
/*!******************************************************************************!*\
  !*** ./cartridges/app_dune/cartridge/client/default/js/monetate/monetate.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.monetateQ = window.monetateQ || [];\n\n/**\n * Product Details Page\n * @param {Object} details - the details object of the globale response also used for local basketmodel\n * @param {Object} product - target product object\n * @return {string} - discounted customer price\n */\nfunction getProductPrice(details, product) {\n  var productPrice = product.customerPrice;\n  if (details.discounts !== undefined) {\n    for (var index = 0; index < details.discounts.length; index++) {\n      var discount = details.discounts[index];\n      var productQuantity = product.quantity;\n      if (discount.productCartItemId === product.cartItemId) {\n        return product.customerPrice - Math.abs(discount.customerPrice / productQuantity);\n      }\n    }\n  }\n  return productPrice;\n}\nvar monetate = {\n  /**\n   * Order Confirmation Page\n   * @param {Object} data - The order data specific for this order - source could be GlobalE or Dune Checkout\n   */\n  addPurchaseRows: function addPurchaseRows(data) {\n    var productsArray = [];\n    // GlobalE Order Confirmation Page\n    if (data && data.details) {\n      var currency = data.details.customerCurrency;\n      $.each(data.details.products, function (index, product) {\n        productsArray.push({\n          purchaseId: data.MerchantOrderId,\n          productId: product.sku,\n          quantity: product.quantity,\n          unitPrice: getProductPrice(data.details, product),\n          currency: currency\n        });\n      });\n      if (productsArray.length > 0) {\n        window.monetateQ.push(['addPurchaseRows', productsArray]);\n        this.setPageType();\n        this.setTrackData();\n      }\n    }\n  },\n  /**\n   * Add to Cart\n   * @param {Object} cartData - CartModel > cart\n   */\n  addCartRows: function addCartRows(cartData) {\n    var cart = cartData && cartData.cart ? cartData.cart : cartData;\n    if (!cart) {\n      // Empty cart track\n      window.monetateQ.push(['addCartRows', []]);\n      this.setTrackData();\n    } else if (cart.items) {\n      var productsArray = [];\n      $.each(cart.items, function (index, product) {\n        var price = product.price.sales ? product.price.sales : product.price.list;\n        productsArray.push({\n          productId: product.id,\n          quantity: product.quantity,\n          unitPrice: price.decimalPrice,\n          currency: price.currency\n        });\n      });\n      if (productsArray.length > 0) {\n        window.monetateQ.push(['addCartRows', productsArray]);\n        this.setPageType();\n        this.setTrackData();\n      }\n    }\n  },\n  /**\n   * Product Details Page\n   * @param {Object} data - productData\n   */\n  addProductDetails: function addProductDetails(data) {\n    if (data.product && data.product.id) {\n      if (data.product.variationGroupId && data.product.variant) {\n        window.monetateQ.push(['addProductDetails', [{\n          productId: data.product.variationGroupId,\n          sku: data.product.id\n        }]]);\n      } else {\n        window.monetateQ.push(['addProductDetails', [data.product.id]]);\n      }\n      this.addCategories();\n    }\n  },\n  /**\n   * Product Listing Page\n   */\n  addProducts: function addProducts() {\n    var plpProductsArray = [];\n    $('div.product').each(function () {\n      if ($(this).data('pid')) {\n        plpProductsArray.push({\n          productId: String($(this).data('pid')),\n          sku: ''\n        });\n      }\n    });\n    if (plpProductsArray.length) {\n      window.monetateQ.push(['addProducts', plpProductsArray]);\n      this.addCategories();\n    }\n  },\n  /**\n   * Get the page type based on Monetate dedicated data attribute\n   *\n   * @return {string} - page type\n   */\n  getPageType: function getPageType() {\n    var $page = $('.page');\n    var pageType = '';\n    if ($page.length && $page.data('page-type') !== undefined) {\n      pageType = $page.data('page-type');\n    }\n    return pageType;\n  },\n  /**\n   * Set the page type into the monetateQ datalayer object\n   * @param {Object} isOnPageLoad - indicates if this function is invoked automatically on page load\n   */\n  setPageType: function setPageType(isOnPageLoad) {\n    var pageType = this.getPageType();\n    if (pageType) {\n      window.monetateQ.push(['setPageType', pageType]);\n      if (isOnPageLoad) {\n        this.setTrackData();\n      }\n    }\n  },\n  /**\n   * Page track event\n   */\n  trackPage: function trackPage() {\n    var $page = $('.page');\n    var $body = $('body');\n\n    // Set the page type inside the monetateQ datalayer and retrieve the type\n    var pageType = this.getPageType();\n    switch (pageType) {\n      case 'main':\n        /*  Home page\n        *   As per the recomendation in DUNEOPT-207 (xlsx file) we should add the cart items into the motetate datalayer\n        */\n        this.setPageType(true);\n        break;\n      case 'index':\n        // PLP\n        this.setPageType(false);\n        this.addProducts();\n        break;\n      case 'search':\n        // Search results\n        this.setPageType(false);\n        this.addProducts();\n        break;\n      case 'product':\n        this.setPageType(false);\n        if ($page.find('.product-detail').data('product-isvariant')) {\n          this.addProductDetails({\n            product: {\n              variationGroupId: $page.find('.product-detail').data('product-variant-variation-group-id'),\n              variant: true,\n              id: $page.find('.product-detail').data('pid')\n            }\n          });\n        } else {\n          this.addProductDetails({\n            product: {\n              id: $page.find('.product-detail').data('pid')\n            }\n          });\n        }\n        break;\n      case 'cart':\n        if ($page.data('cart-items') !== undefined) {\n          $body.trigger('monetate:addCartRows', $page.data('cart-items'));\n        }\n        break;\n      case 'checkout':\n        this.setPageType(true);\n        break;\n      case 'purchase':\n        // Confirmation Page\n        if ($('.js-order-confirmation-info').length) {\n          var orderData = $('.js-order-confirmation-info').data('purchase-rows');\n          $body.trigger('monetate:addPurchaseRows', orderData);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n  /* Optional events */\n\n  /**\n   * Add Categories\n   */\n  addCategories: function addCategories() {\n    var $breadcrumbs = $('.js-breadcrumbs-monetate');\n    if ($breadcrumbs.length) {\n      window.monetateQ.push(['addCategories', $breadcrumbs.data('categories')]);\n      this.addBreadcrumbs();\n    } else {\n      this.setTrackData();\n    }\n  },\n  /**\n   * Add Breadcrumbs\n   */\n  addBreadcrumbs: function addBreadcrumbs() {\n    var $breadcrumbs = $('.js-breadcrumbs-monetate');\n    if ($breadcrumbs.length) {\n      window.monetateQ.push(['addBreadcrumbs', $breadcrumbs.data('categories')]);\n      this.setTrackData();\n    }\n  },\n  /**\n   * Set TrackData\n   */\n  setTrackData: function setTrackData() {\n    window.monetateQ.push(['trackData']);\n  }\n};\nmodule.exports = function () {\n  var $body = $('body');\n\n  // Handle Events\n  $body.on('monetate:addCartRows', function (event, data) {\n    monetate.addCartRows(data);\n  });\n  $body.on('monetate:addProductDetails', function (event, data) {\n    monetate.addProductDetails(data);\n  });\n  $body.on('monetate:addPurchaseRows', function (event, data) {\n    monetate.addPurchaseRows(data);\n  });\n\n  // PDP/PLP add to cart\n  $body.on('product:afterAddToCart', function (event, response) {\n    $body.trigger('monetate:addCartRows', response);\n  });\n\n  // PDP Size Select\n  $body.on('product:afterAttributeSelect', function (event, response) {\n    if (!response.isOnPageLoad) {\n      monetate.setPageType(false);\n      if (response && response.data) {\n        $body.trigger('monetate:addProductDetails', response.data);\n      }\n    }\n  });\n  $body.on('monetate:addProducts', function () {\n    monetate.setPageType(false);\n    monetate.addProducts();\n  });\n  monetate.trackPage();\n};\n\n//# sourceURL=webpack:///./cartridges/app_dune/cartridge/client/default/js/monetate/monetate.js?");

/***/ })

/******/ });