/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./cartridges/app_dune/cartridge/client/default/js/gtm.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js":
/*!**********************************************************************************!*\
  !*** ../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nmodule.exports = function (include) {\n  if (typeof include === 'function') {\n    include();\n  } else if (_typeof(include) === 'object') {\n    Object.keys(include).forEach(function (key) {\n      if (typeof include[key] === 'function') {\n        include[key]();\n      }\n    });\n  }\n};\n\n//# sourceURL=webpack:///../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js?");

/***/ }),

/***/ "./cartridges/app_dune/cartridge/client/default/js/gtm.js":
/*!****************************************************************!*\
  !*** ./cartridges/app_dune/cartridge/client/default/js/gtm.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar processInclude = __webpack_require__(/*! base/util */ \"../sfra/cartridges/app_storefront_base/cartridge/client/default/js/util.js\");\n$(function () {\n  processInclude(__webpack_require__(/*! ./gtm/gtm */ \"./cartridges/app_dune/cartridge/client/default/js/gtm/gtm.js\"));\n});\n\n//# sourceURL=webpack:///./cartridges/app_dune/cartridge/client/default/js/gtm.js?");

/***/ }),

/***/ "./cartridges/app_dune/cartridge/client/default/js/gtm/gtm.js":
/*!********************************************************************!*\
  !*** ./cartridges/app_dune/cartridge/client/default/js/gtm/gtm.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar productHelpers = __webpack_require__(/*! ../product/helpers */ \"./cartridges/app_dune/cartridge/client/default/js/product/helpers.js\");\nvar utils = __webpack_require__(/*! ../utils/utils */ \"./cartridges/app_dune/cartridge/client/default/js/utils/utils.js\");\n\n/**\n * add list object on add/remove from cart event\n * @param {Object} jsonData - data object\n * @param {Object} target - the target to identify the source of the request\n * @returns {Object} - new object with a list property\n */\nfunction updateGTMList(jsonData, target) {\n  var tempJsonData = typeof jsonData === 'string' ? JSON.parse(jsonData) : jsonData;\n  var listObj = {\n    list: $('body').data('pagename')\n  };\n  if (target) {\n    var listSufix = $(target).closest('[data-gtm-list-id]').data('gtm-list-id');\n    listObj.list = listSufix ? listSufix : listObj.list;\n    // listObj.list += listSufix ? ' - ' + listSufix : '';\n  }\n  if (sessionStorage.getItem('plp-page') != null) {\n    listObj.list = sessionStorage.getItem('plp-page');\n  }\n  if (tempJsonData.ecommerce.add) {\n    tempJsonData.ecommerce.add.actionField = listObj;\n  } else {\n    tempJsonData.ecommerce.remove.actionField = listObj;\n  }\n  return tempJsonData;\n}\n\n/**\n * pushes data to GTM and this function is used for ajax request\n * @param {Object} currentGtmData - data to be pushed\n */\nfunction pushToDataLayer(currentGtmData) {\n  if (typeof currentGtmData !== 'undefined') {\n    if (typeof currentGtmData === 'string') {\n      var tempGtmData = JSON.parse(currentGtmData);\n      if (tempGtmData.length > 0) {\n        for (var i = 0; i < tempGtmData.length; i++) {\n          window.dataLayer.push(JSON.parse(tempGtmData[i]));\n        }\n      } else {\n        window.dataLayer.push(JSON.parse(tempGtmData));\n      }\n    } else if (currentGtmData.length > 0) {\n      for (var x = 0; x < currentGtmData.length; x++) {\n        window.dataLayer.push(JSON.parse(currentGtmData[x]));\n      }\n    } else {\n      window.dataLayer.push(JSON.parse(currentGtmData));\n    }\n  }\n}\n\n/**\n * Generate dataLayer for Checkout Option\n * @param {Int} step - Checkout step\n * @param {string} checkoutOption - option value\n * @returns {Object} - dataLayer json\n */\nfunction onCheckoutOption(step, checkoutOption) {\n  var optionData = {\n    event: 'checkoutOption',\n    ecommerce: {\n      checkout_option: {\n        actionField: {\n          step: step,\n          option: checkoutOption\n        }\n      }\n    }\n  };\n  return optionData;\n}\n\n/**\n * Generate dataLayer for Search Suggestion\n * @param {string} searchText - search phrase\n * @returns {Object} - dataLayer json\n */\nfunction onSuggestionClick(searchText) {\n  var optionData = {\n    event: 'predictiveSearch',\n    ajaxSearchTerm: searchText\n  };\n  return optionData;\n}\n\n/**\n * Generate object to be pushed when \"EDIT\" is clicked for Shipping and Payment steps.\n * @param {string} el - element selector\n * @param {string} step - Checkout step\n */\nfunction trackCheckoutStepEdit(el, step) {\n  $.ajax({\n    url: $(el).data('gtm-data-url'),\n    method: 'get',\n    data: {\n      step: step\n    },\n    dataType: 'json',\n    success: function success(data) {\n      pushToDataLayer(data.gtmData);\n    }\n  });\n}\n\n/**\n * Generate object to be pushed when enter to the checkout page, changing delivery method.\n * @param {string} el - element selector\n * @param {string} step - Checkout step\n */\nfunction deliveryCheckoutOption(el) {\n  var deliveryMethod;\n  if (el.val() === 'Home') {\n    deliveryMethod = $('.gtmhomedelivery').data('home-delivery');\n  } else {\n    deliveryMethod = $('.gtmcollectiondelivery').data('collection-delivery');\n  }\n  window.dataLayer.push(onCheckoutOption(2, deliveryMethod));\n}\n\n/**\n * Generate dataLayer for Checkout event\n * @param {Int} step - Checkout step\n * @param {string} checkoutOption - option value\n */\nfunction onCheckout(step, checkoutOption) {\n  var currentDataLayerContent = null;\n  if (window.dataLayer !== undefined && window.dataLayer.length > 0) {\n    currentDataLayerContent = JSON.parse(JSON.stringify(window.dataLayer[0]));\n  }\n  if (currentDataLayerContent !== null) {\n    currentDataLayerContent.ecommerce.checkout.actionField.step = step;\n    currentDataLayerContent.ecommerce.checkout.actionField.option = checkoutOption;\n    window.dataLayer.push(currentDataLayerContent);\n  }\n}\n\n/**\n * Generate and push productImpressions into dataLayer\n * @param {Object} data - parameters with selector\n */\nfunction pushProductImpresions(data) {\n  var productsArray = [];\n  var impressionsPages = [];\n  var itemsSize;\n  if (data.update) {\n    itemsSize = data.selector.length;\n    data.selector.each(function (index) {\n      if (!this.dataset.send || this.dataset.send === 'false') {\n        var json = JSON.parse(this.dataset.jsondata);\n        if (json !== null) {\n          json.position = index + 1;\n          if ($(this).parents('.recommendation-carousel').length > 0) {\n            json.list = $(this).parents('.recommendation-carousel').data('gtmCarouselTitle');\n          }\n          productsArray.push(json);\n          this.dataset.send = true;\n        }\n        if ((index + 1) % 12 === 0 || itemsSize < 12 && data.selector.length === index + 1) {\n          impressionsPages.push(productsArray);\n          productsArray = [];\n          itemsSize -= 12;\n        }\n      } else {\n        itemsSize -= 1;\n      }\n    });\n  } else {\n    var $items = $(data.selector);\n    itemsSize = $items.length;\n    $items.each(function (index) {\n      if (!this.dataset.send || this.dataset.send === 'false') {\n        var json = JSON.parse(this.dataset.jsondata);\n        if (json !== null) {\n          json.position = index + 1;\n          if ($(this).parents('.recommendation-carousel').length > 0) {\n            json.list = $(this).parents('.recommendation-carousel').data('gtmCarouselTitle');\n          } else if ($(this).parents('[data-pagename=\"Product Listing Page\"]').length > 0) {\n            json.list = 'category page';\n          }\n          productsArray.push(json);\n          this.dataset.send = true;\n        }\n        if ((index + 1) % 12 === 0 || itemsSize < 12 && $items.length === index + 1) {\n          impressionsPages.push(productsArray);\n          productsArray = [];\n          itemsSize -= 12;\n        }\n      } else {\n        itemsSize -= 1;\n      }\n    });\n  }\n  var countryId = $('body').data('countryid');\n  var currencyCode = !data.currencyCode ? $('.gtmCurrencyCode').data('gtmcurrencycode') : data.currencyCode;\n  for (var i = 0; i < impressionsPages.length; i++) {\n    var pageObject = {\n      event: 'productImpressions',\n      countryId: countryId,\n      ecommerce: {\n        currencyCode: currencyCode,\n        impressions: impressionsPages[i]\n      },\n      page_number: i\n    };\n    window.dataLayer.push(pageObject);\n  }\n}\n\n/**\n * Function used to extract the required values from a Cookie's value string.\n * @param {*} key Name of cookie\n * @returns {string} Stringified cookie\n */\nfunction getCookie(key) {\n  var cookies = document.cookie.split(';');\n  for (var i = 0; i < cookies.length; i++) {\n    var tokens = cookies[i].split('=');\n    var cookieKey = tokens[0].trim();\n    if (cookieKey === key) {\n      return cookies[i];\n    }\n  }\n  return '';\n}\nmodule.exports = function () {\n  var consentBoxClosed = getCookie('OptanonAlertBoxClosed');\n  if (consentBoxClosed && consentBoxClosed.length > 0) {\n    var oneTrustCookie = utils.getCookieValues('OptanonConsent', 'groups');\n    var groupConsents = utils.createDataObject(oneTrustCookie);\n    if (typeof window.dataLayer === 'undefined') window.dataLayer = [];\n    window.dataLayer.push(groupConsents);\n  }\n  for (var i = 0; i < window.gtmData.length; i++) {\n    // Set the data attributes on the <body> tag\n    var jsonData = window.gtmData[i];\n    if (Object.prototype.hasOwnProperty.call(jsonData, 'funnelPageType')) {\n      $('body').attr('data-pagename', jsonData.funnelPageType);\n    }\n    if (Object.prototype.hasOwnProperty.call(jsonData, 'countryId')) {\n      $('body').attr('data-countryid', jsonData.countryId);\n    }\n    if (typeof jsonData.ecommerce !== 'undefined') {\n      if (Object.prototype.hasOwnProperty.call(jsonData.ecommerce, 'currencyCode')) {\n        $('body').attr('data-currencycode', jsonData.ecommerce.currencyCode);\n      }\n    }\n  }\n  if ($('div.promoView').length) {\n    var promoObjArray = {\n      event: 'promoView',\n      ecommerce: {\n        promoView: {\n          promotions: []\n        }\n      }\n    };\n    $('.promoView').each(function (index) {\n      promoObjArray.ecommerce.promoView.promotions.push({\n        id: $(this).data('promoid'),\n        // Name or ID is required.\n        name: $(this).data('promoname'),\n        creative: $(this).data('promocreative'),\n        position: index\n      });\n      var $this = $(this);\n      $this.find('a').click(function (event) {\n        event.preventDefault();\n        var promoObjLink = $(this);\n        var promoObj = {\n          event: 'promotionClick',\n          ecommerce: {\n            promoView: {\n              promoClick: [{\n                id: $this.data('promoid'),\n                // Name or ID is required.\n                name: $this.data('promoname'),\n                creative: $this.data('promocreative'),\n                position: $this.data('promoposition')\n              }]\n            }\n          },\n          eventCallback: function eventCallback() {\n            document.location = promoObjLink.attr('href');\n          }\n        };\n        window.dataLayer.push(promoObj);\n      });\n    });\n    window.dataLayer.push(promoObjArray);\n  }\n  $('body').on('product:beforeAddToCart', function () {\n    $(document).bind('ajaxSend', function (event, jqxhr, settings) {\n      if ($('.product-set-detail').length || $('.product-set').length) {\n        var productSetId = $('.product-set-detail').data('pid') || $('.product-set').data('pid');\n        settings.data += '&productSetId=' + productSetId;\n      }\n    });\n  });\n  $('body').on('product:afterAddToCart', function (event, data) {\n    if (data.gtmData) {\n      if (typeof data.gtmData.map === 'function') {\n        for (var j = 0; j < data.gtmData.length; j++) {\n          window.dataLayer.push(updateGTMList(data.gtmData[j], data.target));\n        }\n      } else {\n        window.dataLayer.push(updateGTMList(data.gtmData, data.target));\n      }\n    }\n  });\n  $('body').on('checkout:updateCheckoutView', function (event, data) {\n    pushToDataLayer(data.gtmData);\n  });\n  $('body').on('carousels:productImpresions', function (event, data) {\n    pushProductImpresions(data);\n  });\n\n  /**\n   * parses query string\n   * @param {string} search - query string to be parsed\n   * @returns {Object} - json data\n   */\n  function parseQuery(search) {\n    return JSON.parse('{\"' + search.replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) {\n      return key === '' ? value : decodeURIComponent(value);\n    });\n  }\n  var gtmPlpRefine = '#ajaxGtmType=refine';\n  var gtmPlpShowMore = '#ajaxGtmType=showmore';\n  var cartUpdateQuantity = 'UpdateQuantity';\n  var cartRemoveProduct = 'RemoveProductLineItem';\n  $(document).bind('ajaxComplete', function (event, jqxhr, settings) {\n    if (settings.url.toLowerCase().indexOf(gtmPlpRefine.toLowerCase()) !== -1 || settings.url.toLowerCase().indexOf(gtmPlpShowMore.toLowerCase()) !== -1) {\n      if (window.tempGtmData) {\n        pushToDataLayer([JSON.stringify(window.tempGtmData)]);\n      }\n      $(document).unbind('ajaxSend');\n      settings.url.replace(gtmPlpRefine, '');\n      settings.url.replace(gtmPlpShowMore, '');\n    }\n    if (settings.url.toLowerCase().indexOf(cartUpdateQuantity.toLowerCase()) !== -1) {\n      var search = jqxhr.responseJSON.queryString;\n      var queryObject = parseQuery(search);\n      var $originalE = $('div.quantity-form').find('[data-pid=\"' + queryObject.pid + '\"]').parent();\n      $originalE.data('currentquantity', queryObject.quantity);\n    }\n  });\n  $(document).bind('ajaxSend', function (event, jqxhr, settings) {\n    if (settings.url.toLowerCase().indexOf(cartUpdateQuantity.toLowerCase()) !== -1 || settings.url.toLowerCase().indexOf(cartRemoveProduct.toLowerCase()) !== -1) {\n      var searchHr = settings.url;\n      var search = searchHr.substr(searchHr.indexOf('?') + 1);\n      var queryObject = parseQuery(search);\n      var originalQ = $('.uuid-' + queryObject.uuid).find('div.quantity-form').data('currentquantity');\n      if (!originalQ) {\n        originalQ = queryObject.originalQty;\n      }\n      settings.url += '&originalq=' + parseInt(originalQ, 10);\n    }\n  });\n  $('body').on('search:filter', function () {\n    $(document).bind('ajaxSend', function (event, jqxhr, settings) {\n      if (settings.url.toLowerCase().indexOf(gtmPlpRefine.toLowerCase()) === -1) {\n        settings.url += gtmPlpRefine;\n      }\n    });\n  });\n  $('body').on('search:showMore', function () {\n    $(document).bind('ajaxSend', function (event, jqxhr, settings) {\n      if (settings.url.toLowerCase().indexOf(gtmPlpShowMore.toLowerCase()) === -1) {\n        settings.url += gtmPlpShowMore;\n      }\n    });\n  });\n  if ($('.search-results').length) {\n    if (consentBoxClosed && consentBoxClosed.length > 0) {\n      pushProductImpresions({\n        selector: '.search-results .tile-container .product:visible'\n      });\n    }\n  }\n  $('body').on('search:pushProductImpressions', function () {\n    if ($('.search-results').length) {\n      pushProductImpresions({\n        selector: '.search-results .tile-container .product:visible'\n      });\n    }\n  });\n  $('body').on('search:showMoreImpression', function () {\n    pushProductImpresions({\n      selector: '.search-results .tile-container .product:visible',\n      size: 24\n    });\n  });\n  $('body').on('search:applyFiltersImpression', function () {\n    pushProductImpresions({\n      selector: '.search-results .tile-container .product:visible',\n      size: 12\n    });\n  });\n  $('body').on('quickview:show', function (e, data) {\n    var pageName = $('body').data('pagename');\n    pageName = typeof pageName !== 'undefined' ? pageName : '';\n    var currencyCode = $('body').data('currencycode');\n    var quickViewContainer = $(data.container);\n    var productData = quickViewContainer.find('[data-jsondata]').data('jsondata');\n    if (!currencyCode) {\n      currencyCode = $('.gtmCurrencyCode').data('gtmcurrencycode');\n    }\n    var listSuffix = data.listSuffix ? data.listSuffix : '';\n    var isBonusModal = quickViewContainer.hasClass('bonus-product-modal') ? 'true' : null;\n    productData = isBonusModal ? productData : [productData];\n    var countryId = $('.gtmCountryId').data('countryid');\n    var list = listSuffix ? listSuffix : pageName;\n    /* if (pageName !== '') {\n              list = pageName + '-' + listSuffix;\n    } */\n\n    var currentGtmData = {\n      event: 'quickView',\n      countryId: countryId,\n      ecommerce: {\n        currencyCode: currencyCode,\n        detail: {\n          actionField: {\n            list: list\n          },\n          products: productData\n        }\n      }\n    };\n    window.dataLayer.push(currentGtmData);\n  });\n  $('body').on('minicart:productClick', function (event, data) {\n    var currencyCode = $('body').data('currencycode');\n    var productData = data.gtmProductData;\n    var list = sessionStorage.getItem('cart-page');\n    var countryId = $('.gtmCountryId').data('countryid');\n    if (!currencyCode) {\n      currencyCode = $('.gtmCurrencyCode').data('gtmcurrencycode');\n    }\n    var currentGtmData = {\n      event: 'productClick',\n      countryId: countryId,\n      ecommerce: {\n        currencyCode: currencyCode,\n        click: {\n          actionField: {\n            list: list\n          },\n          products: [productData]\n        }\n      }\n    };\n    window.dataLayer.push(currentGtmData);\n  });\n  $('body').on('click', '.product-tile .image-container a:not(.quickview, .wishlistTile, .js-size-item), .product-tile .pdp-link, .full-pdp-link, .line-item-link, .product-suggestions, .plp-banner .banner-img, .plp-banner .banner-product', function (e) {\n    var $target = $(e.target);\n    var $el = $(this);\n    var pageName = $('body').data('pagename');\n    var currencyCode = $('body').data('currencycode');\n    var countryId = $('body').data('countryid');\n    var elPosition = parseInt(productHelpers.calcProductPosition($el), 10);\n    var gtmList = '';\n    var $closestDataElement = $el.closest('[data-jsondata]');\n    var productData = null;\n    if ($closestDataElement.length > 0) {\n      productData = JSON.parse($closestDataElement[0].dataset.jsondata);\n      gtmList = $closestDataElement[0].dataset.list;\n    }\n    if ($target.hasClass('full-pdp-link')) {\n      $closestDataElement = $('.modal-content .product-quickview');\n      productData = JSON.parse($closestDataElement[0].dataset.jsondata);\n      elPosition = productData && productData.position ? productData.position : null;\n    }\n    var wlPosition = parseInt($(this).data('position'), 10); // position in wishlist page\n    if (wlPosition > 0) {\n      elPosition = wlPosition;\n    }\n    if (elPosition > 0 && productData) {\n      productData.position = elPosition;\n    }\n    var miniBagID = $target.hasClass('minicart-product') ? $target.closest('[data-gtm-minibag-id]').data('gtm-minibag-id') : null;\n    miniBagID = miniBagID ? ' - ' + miniBagID : '';\n    var suggestionID = $el.hasClass('product-suggestions') ? $el.closest('[data-gtm-suggestion-id]').data('gtm-suggestion-id') : null;\n    suggestionID = suggestionID ? ' - ' + suggestionID : '';\n    var $carouselTile = $el.closest('.recommendations');\n    var carouselID = $carouselTile ? $el.closest('[data-gtm-carousel-id]').data('gtm-carousel-id') : null;\n    carouselID = carouselID ? ' - ' + carouselID : '';\n    var gtmListID = $el.closest('[data-gtm-list-id]') ? $el.closest('[data-gtm-list-id]').data('gtm-list-id') : null;\n    gtmListID = gtmListID ? ' - ' + gtmListID : '';\n    var gtmQuickViewID = $el.closest('[data-gtm-quickview-id]') ? $el.closest('[data-gtm-quickview-id]').data('gtm-quickview-id') : null;\n    gtmQuickViewID = gtmQuickViewID ? ' - ' + gtmQuickViewID : '';\n    var list = pageName + carouselID + suggestionID + miniBagID + gtmListID + gtmQuickViewID;\n    if ($carouselTile && $carouselTile.data('gtm-carousel-title')) {\n      list = $carouselTile.data('gtm-carousel-title');\n    }\n    list = gtmList ? gtmList : list;\n    if ($el.hasClass('banner-img') || $el.hasClass('banner-product')) {\n      list = $('.gtmPLPBannerList').data('plpbannerlist');\n    }\n    var currentGtmData = {\n      event: 'productClick',\n      countryId: countryId,\n      ecommerce: {\n        currencyCode: currencyCode,\n        click: {\n          actionField: {\n            list: list\n          },\n          products: [productData]\n        }\n      }\n    };\n    sessionStorage.setItem('plp-page', list);\n    window.dataLayer.push(currentGtmData);\n  });\n  $('body').on('removeModal:removeItem', function (e, data) {\n    window.dataLayer.push(updateGTMList(data.gtmData, data.target));\n  });\n\n  // Set funnelPageType attribute on tabs change for Login/Registation page\n  $('.login-form-nav a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n    window.dataLayer.push({\n      funnelPageType: $(e.target).data('pagename')\n    });\n  });\n  window.onPromoClick = function (promotions, position) {\n    var promotionsArr = [];\n    promotions.forEach(function (promo) {\n      promotionsArr.push({\n        id: promo.ID,\n        name: promo.name,\n        creative: promo.image,\n        position: position + 1\n      });\n    });\n    window.dataLayer.push({\n      event: 'promotionClick',\n      ecommerce: {\n        promoClick: {\n          promotions: promotionsArr\n        }\n      }\n    });\n  };\n  $('body').on('click', '.checkout-btn', function () {\n    var userData = window.userData ? JSON.parse(window.userData.userdata) : null;\n    if (userData && userData.user.segment.loginStatus !== '0') {\n      window.dataLayer.push(onCheckoutOption(1, 'Logged in'));\n    }\n  });\n  $('body').on('click', '.gtm-checkout-as-guest', function () {\n    window.dataLayer.push(onCheckoutOption(1, 'Guest'));\n  });\n  $('body').on('click', '.login-form-return .login .btn-primary', function () {\n    window.dataLayer.push(onCheckoutOption(1, 'Logged in'));\n  });\n  $('body').on('change', '.shipping-method-list', function () {\n    var shippingMethodId = $(this).find(':checked').attr('id');\n    var shippingMethodInputName = $('label[for$=\"' + shippingMethodId + '\"]').find('span.display-name').html();\n    shippingMethodInputName = shippingMethodInputName.replace(/:\\s*$/, '');\n    window.dataLayer.push(onCheckoutOption(3, shippingMethodInputName));\n  });\n  $('body').on('change', '.select-payment', function () {\n    var paymentMethod = $(this).closest('.payment-option').data('method-id');\n    if (this.value === '#credit-card-content') {\n      paymentMethod = 'card';\n    }\n    window.dataLayer.push(onCheckoutOption(4, paymentMethod));\n  });\n  $('.shipping-summary .edit-button').on('click', function () {\n    trackCheckoutStepEdit($(this), '2');\n  });\n  $('.payment-summary .edit-button').on('click', function () {\n    trackCheckoutStepEdit($(this), '3');\n  });\n  $('input[name=\"deliveryMethodId\"]').on('change', function () {\n    deliveryCheckoutOption($(this));\n  });\n  if ($('.delivery-method-section').is(':visible')) {\n    var el = $('input[name=\"deliveryMethodId\"]:checked');\n    deliveryCheckoutOption(el);\n  } else if ($('.delivery-method-summary').length > 0) {\n    var deliveryMethod = $('.delivery-method-summary #selectedDeliveryMethodTitle').text();\n    window.dataLayer.push(onCheckoutOption(2, deliveryMethod));\n  }\n  $('body').on('product:afterAttributeSelect', function (e, response) {\n    var $colorElement = $(response.selectedElement).closest('[data-attr=\"color\"]');\n    if ($('.product-detail').length > 0 && $colorElement.length > 0 && response.data.gtmData) {\n      pushToDataLayer(response.data.gtmData);\n      $('.recommendations-wrapper .slick-container').each(function () {\n        var $parent = $(this).closest('.recommendations');\n        $parent.find('.slick-slide:not(.slick-cloned) .product').attr('data-send', false);\n        pushProductImpresions({\n          selector: $parent.find('.slick-slide:not(.slick-cloned) .product'),\n          currencyCode: $parent.data('currency'),\n          list: $parent.data('gtm-carousel-title'),\n          update: true\n        });\n      });\n    } else if (response.gtmData) {\n      pushToDataLayer(response.gtmData);\n    }\n  });\n  $('body').on('wishlist:addProduct', function (event, data) {\n    if (data && data.success && data.gtmData) {\n      pushToDataLayer(data.gtmData);\n    }\n  });\n  $('body').on('gtm:onCheckoutOption', function (e, data) {\n    if (data.step === '3') {\n      window.dataLayer.push(onCheckoutOption(data.step, data.checkoutOption));\n    } else {\n      onCheckout(data.step, data.checkoutOption);\n    }\n  });\n  $('body').on('gtm:suggestionClick', function (e, data) {\n    window.dataLayer.push(onSuggestionClick(data.searchText));\n  });\n  $('body').on('gtm:geConfirmationPage', function (e, geGTMData) {\n    if (geGTMData) {\n      window.dataLayer.push(geGTMData);\n    }\n  });\n  $('body').on('gtm:onRegistrationSuccess', function () {\n    window.dataLayer.push({\n      event: 'createAccountFromCheckout'\n    });\n  });\n  $('body').on('search:filterBySelection', function (e, data) {\n    if (data) {\n      window.dataLayer.push(JSON.parse(data));\n    }\n  });\n};\n\n//# sourceURL=webpack:///./cartridges/app_dune/cartridge/client/default/js/gtm/gtm.js?");

/***/ }),

/***/ "./cartridges/app_dune/cartridge/client/default/js/product/helpers.js":
/*!****************************************************************************!*\
  !*** ./cartridges/app_dune/cartridge/client/default/js/product/helpers.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Calculate the products position in carousel or product grid\n * @param {string} $el - Current element\n * @return {string} productTileIndex - The index of the product\n */\nvar calcProductPosition = function calcProductPosition($el) {\n  var productTileIndex = null;\n  var $tileContainerGrid = $el.closest('.tile-container');\n  var $tileContainerCarousel = $el.closest('.slick-slide');\n  var $tileContainerSearch = $el.closest('.product-suggestions');\n  if ($tileContainerGrid.length > 0) {\n    productTileIndex = $tileContainerGrid.index('.tile-container');\n  } else if ($tileContainerSearch.length > 0) {\n    productTileIndex = $tileContainerSearch.index('.product-suggestions');\n  } else if ($tileContainerCarousel.length > 0) {\n    if ($tileContainerCarousel.hasClass('slick-cloned')) {\n      var productsCount = $tileContainerCarousel.parent().find('.slick-slide:not(.slick-cloned)').length;\n      productTileIndex = productsCount + $tileContainerCarousel.data('slick-index');\n    } else {\n      productTileIndex = $tileContainerCarousel.index('.slick-slide:not(.slick-cloned)');\n    }\n  }\n  return productTileIndex !== null ? parseInt(productTileIndex, 10) + 1 : null;\n};\nmodule.exports = {\n  calcProductPosition: calcProductPosition\n};\n\n//# sourceURL=webpack:///./cartridges/app_dune/cartridge/client/default/js/product/helpers.js?");

/***/ }),

/***/ "./cartridges/app_dune/cartridge/client/default/js/utils/utils.js":
/*!************************************************************************!*\
  !*** ./cartridges/app_dune/cartridge/client/default/js/utils/utils.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nvar MOBILE_MAX_WIDTH = 767;\nvar TABLET_MAX_WIDTH = 1024;\nvar addressFormPopulateFields = ['input[name$=_address1]', 'input[name$=_address2]', 'input[name$=_city]', 'input[name$=_postalCode]', 'input[name$=_stateCode]'];\n\n/**\n * A function that will close all select boxes in the document, except the current select box\n *\n * @param {Object} element Current select box\n */\nfunction closeSelectComponents(element) {\n  var styledElementsContainer = document.getElementsByClassName('select-items');\n  var selectedOptionContainer = document.getElementsByClassName('select-selected-container');\n  for (var i = 0; i < selectedOptionContainer.length; i++) {\n    if (element && !element.target) {\n      // Exclude the passed 'element'\n      if (element !== selectedOptionContainer[i]) {\n        selectedOptionContainer[i].classList.remove('dropdown-opened');\n        styledElementsContainer[i].classList.add('select-hide');\n      }\n    } else {\n      // Close all custom selects\n      selectedOptionContainer[i].classList.remove('dropdown-opened');\n      styledElementsContainer[i].classList.add('select-hide');\n    }\n  }\n}\n\n/**\n * Calculate the appropriate position of the custom options container\n *\n * @param {Object} container The container where the select is located\n */\nfunction calculateOptionsPositionInModal(container) {\n  var mcSelectItems = container.getElementsByClassName('select-items');\n  var mcSelectSelected = container.getElementsByClassName('select-selected');\n  if (mcSelectItems && mcSelectSelected) {\n    for (var k = 0; k < mcSelectSelected.length; k++) {\n      var rect = mcSelectSelected[k].parentElement.getBoundingClientRect();\n      mcSelectItems[k].style.width = rect.width + 'px';\n      mcSelectItems[k].style.top = rect.bottom + 'px';\n    }\n  }\n}\n\n/**\n * Execute event on dropdown select click and enter key press\n * @param {Object} currentContainer The container where the select is located\n */\nfunction triggerElementClick(currentContainer) {\n  // when an item is clicked, update the original select box, and the selected item\n  var selectItemsContainer = currentContainer.parentNode;\n  var selectSelected = currentContainer.parentNode.parentNode.querySelector('.select-selected-container');\n  var selectElement = currentContainer.parentNode.parentNode.parentNode.getElementsByTagName('select')[0];\n  for (var i = 0; i < selectElement.length; i++) {\n    // eslint-disable-line\n    if (selectElement.options[i].textContent.trim().replace(/[\\n\\t\\r]/g, '') === currentContainer.textContent.trim().replace(/[\\n\\t\\r]/g, '')) {\n      // eslint-disable-line\n      selectElement.selectedIndex = i;\n      selectElement.options[i].selected = 'selected';\n      currentContainer.setAttribute('class', 'same-as-selected selectable');\n      currentContainer.setAttribute('tabindex', '0');\n      $(selectElement).trigger('change');\n      break;\n    }\n  }\n  $(selectItemsContainer).addClass('select-hide');\n  $(selectSelected).removeClass('dropdown-opened is-invalid');\n  var klarnaPaymentItem = $('#klarna-payment-method-container .payment-options');\n  var billingCountry = document.getElementById('billingCountry');\n  var shippingCountry = document.getElementById('shippingCountry');\n  if (billingCountry) {\n    var billingCountrySameAsShipping = billingCountry.options[billingCountry.selectedIndex].value === shippingCountry.options[shippingCountry.selectedIndex].value;\n    $('body').trigger('checkout:checkKlarnaAvailability', {\n      billingCountrySameAsShipping: billingCountrySameAsShipping\n    });\n  }\n  if (!klarnaPaymentItem.hasClass('active')) {\n    $('button.submit-payment').removeClass('d-none');\n    $('#payWithGpayBtn, #payWithKlarnaBtn, #payWithApplePayBtn, #payWithPaypalBtn').addClass('d-none');\n  }\n}\n\n/**\n * Get all elements after the current focused in ht container\n * @param {Object} e Current item to search after\n * @param {string} selector Selector to search filter\n * @returns {array} Array with all available matches\n */\nfunction nextElementsMatch(e, selector) {\n  var result = [];\n  while (e = e.nextElementSibling) {\n    // eslint-disable-line\n    if (e.matches(selector)) {\n      result.push(e);\n    }\n  }\n  return result;\n}\nmodule.exports = {\n  init: function init() {\n    var selectHolderClasses = ['form-group', 'quantity-form', 'quantity', 'attribute'];\n    for (var i = 0; i < selectHolderClasses.length; i++) {\n      this.customSelectStyler(selectHolderClasses[i]);\n    }\n  },\n  getWidthObject: function getWidthObject() {\n    return {\n      mobile: MOBILE_MAX_WIDTH,\n      tablet: TABLET_MAX_WIDTH\n    };\n  },\n  customSelectStyler: function customSelectStyler(selectholderClassName, container) {\n    if (!selectholderClassName) {\n      return;\n    }\n    var selectContainer;\n    var selectElement;\n    var selectedOptionContainer;\n    var styledElementsContainer;\n    var selectSelectedContainer;\n    var selectSelectedAccessibilityContainer;\n    var styledOptions;\n\n    // look for any elements with the class provided as a parameter\n    if (container) {\n      selectContainer = container.find(selectholderClassName);\n    } else {\n      selectContainer = document.getElementsByClassName(selectholderClassName);\n    }\n    for (var i = 0; i < selectContainer.length; i++) {\n      var currentSelect = selectContainer[i];\n      selectElement = currentSelect.getElementsByTagName('select')[0];\n      if (typeof selectElement === 'undefined' || selectElement.id === 'mobile-size-select') {\n        continue; // eslint-disable-line\n      }\n      currentSelect.classList.add('custom-select-container');\n\n      // for each element, create a new DIV that will act as the selected item\n      if (currentSelect.getElementsByClassName('select-selected').length < 1) {\n        selectedOptionContainer = document.createElement('DIV');\n        selectedOptionContainer.setAttribute('class', 'select-selected');\n        selectedOptionContainer.setAttribute('data-cs-mask', '');\n        selectSelectedAccessibilityContainer = document.createElement('DIV');\n        selectSelectedAccessibilityContainer.setAttribute('class', 'js-accessibility-base');\n        selectSelectedAccessibilityContainer.setAttribute('tabindex', '0');\n        selectSelectedContainer = document.createElement('DIV');\n        selectSelectedContainer.setAttribute('class', 'select-selected-container');\n        selectSelectedContainer.append(selectedOptionContainer);\n        selectSelectedAccessibilityContainer.append(selectSelectedContainer);\n        var selectedNativeElement = null; // eslint-disable-line no-unused-vars\n        var nativeSelectElementValue = selectElement.getAttribute('value');\n        var selectIndex = $(selectElement).find('option[selected]').last().index();\n        if (selectIndex > 0 && !nativeSelectElementValue) {\n          selectedNativeElement = selectElement.options[selectIndex];\n          selectedOptionContainer.innerHTML = selectElement.options[selectIndex].innerHTML;\n          if (selectElement.options[selectIndex].disabled) {\n            selectedOptionContainer.className += ' text-muted';\n          }\n        } else if (nativeSelectElementValue) {\n          for (var key = 0; key < selectElement.options.length; key++) {\n            var opt = selectElement.options[key];\n            if (opt.value.toLowerCase().indexOf(nativeSelectElementValue.toLowerCase()) !== -1) {\n              selectedNativeElement = opt;\n              if (opt.disabled) {\n                selectedOptionContainer.className += ' text-muted';\n              }\n              selectedOptionContainer.innerHTML = opt.innerHTML;\n              break;\n            }\n          }\n        } else {\n          selectElement.selectedIndex = 0;\n          if (selectElement.options.length > 0) {\n            selectElement.options[0].selected = 'selected';\n            if (selectElement.options[0].disabled) {\n              selectedOptionContainer.className += ' text-muted';\n            }\n            selectedOptionContainer.innerHTML = selectElement.options[0].innerHTML;\n            selectedNativeElement = selectElement.options[0];\n          }\n        }\n        currentSelect.insertBefore(selectSelectedAccessibilityContainer, selectElement.nextSibling);\n        var arrowContainer = document.createElement('DIV');\n        arrowContainer.setAttribute('class', 'dropdown-arrow');\n        selectSelectedContainer.append(arrowContainer);\n      } else {\n        selectedOptionContainer = currentSelect.getElementsByClassName('select-selected')[0];\n      }\n      var initializeClickEvents = true;\n      // for each element, create a new DIV that will contain the option list\n      if (currentSelect.getElementsByClassName('select-items').length < 1) {\n        styledElementsContainer = document.createElement('DIV');\n        styledElementsContainer.setAttribute('class', 'select-items select-hide');\n      } else {\n        initializeClickEvents = selectholderClassName !== 'custom-address-selector';\n        if (selectholderClassName === 'custom-address-selector') {\n          currentSelect.getElementsByClassName('select-items')[0].innerHTML = '';\n        }\n        styledElementsContainer = currentSelect.getElementsByClassName('select-items')[0];\n      }\n      if (styledElementsContainer && styledElementsContainer.childNodes.length < 1) {\n        for (var j = 0; j < selectElement.length; j++) {\n          if ($(selectElement[j]).css('display') === 'none') {\n            continue; // eslint-disable-line\n          }\n\n          // for each option in the original select element, create a new DIV that will act as an option item\n          styledOptions = document.createElement('DIV');\n          styledOptions.innerHTML = selectElement.options[j].innerHTML;\n          if (j === selectElement.selectedIndex) {\n            styledOptions.setAttribute('class', 'same-as-selected selectable');\n            styledOptions.setAttribute('tabindex', '0');\n            if (selectedOptionContainer.innerHTML !== styledOptions.innerHTML) {\n              selectedOptionContainer.innerHTML = styledOptions.innerHTML;\n            }\n          }\n          if (!selectElement[j].disabled) {\n            styledOptions.setAttribute('tabindex', '1');\n            styledOptions.classList.add('selectable');\n            styledOptions.setAttribute('data-cs-mask', '');\n            styledOptions.addEventListener('click', function () {\n              // eslint-disable-line\n              triggerElementClick(this);\n            });\n            styledOptions.addEventListener('keypress', function (event) {\n              if (event.which === 13) {\n                // enter key\n                event.target.parentNode.parentNode.focus();\n                triggerElementClick(this);\n              }\n            });\n          } else {\n            selectElement[j].classList.add('disabled');\n            styledOptions.classList.add('disabled');\n            if (!selectElement[j].classList.contains('option-group')) {\n              styledOptions.setAttribute('data-cs-mask', '');\n            }\n          }\n          styledElementsContainer.appendChild(styledOptions);\n        }\n        var dropdowns = $('.js-accessibility-base');\n        Array.prototype.forEach.call(dropdowns, function (el) {\n          $(el).off('keydown').on('keydown', function (event) {\n            var optionsContainer = event.currentTarget.querySelector('.select-items');\n            var focusedItem = optionsContainer.querySelector('.selectable.focused');\n            var currentElement;\n            if (event.which === 13) {\n              // enter key\n              if (optionsContainer.classList.contains('select-hide')) {\n                event.currentTarget.setAttribute('aria-expanded', 'true');\n                optionsContainer.classList.remove('select-hide');\n                event.currentTarget.querySelector('.select-selected-container').classList.add('dropdown-opened');\n              } else {\n                event.currentTarget.setAttribute('aria-expanded', 'false');\n                optionsContainer.classList.add('select-hide');\n                event.currentTarget.querySelector('.select-selected-container').classList.remove('dropdown-opened');\n              }\n            } else if (event.which === 9) {\n              // tab key\n              if (!optionsContainer.classList.contains('select-hide')) {\n                event.currentTarget.setAttribute('aria-expanded', 'false');\n                optionsContainer.classList.add('select-hide');\n              }\n            } else if (event.which === 40) {\n              // down arrow key\n              event.preventDefault();\n              if (focusedItem) {\n                if (typeof focusedItem.nextSibling === 'undefined') {\n                  // check if it is the last child\n                  return;\n                } else {\n                  // eslint-disable-line\n                  if (_toConsumableArray(nextElementsMatch(focusedItem, '.selectable')).length !== 0) {\n                    currentElement = _toConsumableArray(nextElementsMatch(focusedItem, '.selectable'))[0];\n                    currentElement.classList.add('focused');\n                    currentElement.focus();\n                    focusedItem.classList.remove('focused');\n                  }\n                  return;\n                }\n              } else if (!optionsContainer.classList.contains('select-hide')) {\n                currentElement = optionsContainer.querySelector('.selectable');\n                currentElement.classList.add('focused');\n                currentElement.focus();\n              }\n            } else if (event.which === 38) {\n              // up arrow key\n              event.preventDefault();\n              if (focusedItem) {\n                if (optionsContainer.firstElementChild === focusedItem || optionsContainer.firstElementChild === focusedItem.previousSibling && focusedItem.previousSibling.classList.contains('disabled')) {\n                  optionsContainer.classList.add('select-hide');\n                  optionsContainer.querySelector('.focused').classList.remove('focused');\n                  event.currentTarget.setAttribute('aria-expanded', 'false');\n                  event.currentTarget.focus();\n                } else {\n                  var selectedOption = focusedItem;\n                  if (selectedOption.previousElementSibling.classList.contains('same-as-selected') && selectedOption.previousElementSibling.firstChild && !selectedOption.previousElementSibling.classList.contains('selectable') || selectedOption.previousElementSibling.classList.contains('disabled') && selectedOption.previousElementSibling === null) {\n                    optionsContainer.classList.add('select-hide');\n                    optionsContainer.querySelector('.focused').classList.remove('focused');\n                    event.currentTarget.setAttribute('aria-expanded', 'false');\n                    event.currentTarget.focus();\n                    return;\n                  }\n                  $($(selectedOption).prevAll('.selectable')[0]).focus().addClass('focused');\n                  selectedOption.classList.remove('focused');\n                }\n              } else {\n                if (!optionsContainer.classList.contains('disabled')) {\n                  // eslint-disable-line\n                  optionsContainer.previousElementSibling.classList.add('focused');\n                  optionsContainer.previousElementSibling.focus();\n                }\n              }\n            }\n          });\n        });\n\n        // if undefined then the container element already existed in the DOM and we just have to reselect it\n        // in order to insert the drop down (styledElementsContainer) before it.\n        if (!selectSelectedAccessibilityContainer) {\n          selectSelectedAccessibilityContainer = currentSelect.getElementsByClassName('js-accessibility-base')[0];\n          selectSelectedContainer = currentSelect.getElementsByClassName('select-selected-container')[0];\n        }\n        selectSelectedAccessibilityContainer.insertBefore(styledElementsContainer, selectSelectedContainer);\n        if (styledElementsContainer.getElementsByClassName('same-as-selected').length < 1 && styledElementsContainer.firstChild && $('search-results').length) {\n          styledElementsContainer.firstChild.setAttribute('class', 'same-as-selected selectable');\n          styledElementsContainer.firstChild.setAttribute('tabindex', '0');\n        }\n      }\n      if (initializeClickEvents && selectSelectedContainer) {\n        // eslint-disable-next-line no-loop-func\n        selectSelectedContainer.addEventListener('click', function (e) {\n          // when the select box is clicked, close any other select boxes, and open/close the current select box\n          e.stopPropagation();\n          var dropdownElement = this.parentElement.parentElement.getElementsByClassName('select-items')[0];\n\n          // Toggle the classes to style/unstyle the custom select for hover/focus events\n          if (!this.classList.contains('dropdown-opened')) {\n            this.classList.add('dropdown-opened');\n            dropdownElement.classList.remove('select-hide');\n          } else {\n            this.classList.remove('dropdown-opened');\n            dropdownElement.classList.add('select-hide');\n          }\n\n          // Close all custom selects except for the current one\n          closeSelectComponents(this);\n\n          // scroll to top of the selected element\n          if (!dropdownElement.classList.contains('select-hide')) {\n            var selectedItem = dropdownElement.getElementsByClassName('same-as-selected');\n            if (selectedItem.length > 0) {\n              var selectedPosition = 0;\n              // Currently, there are many disabled options in the select box, which makes the selectedIndex wrong.\n              // Because of that, it's better to just scroll to the first element.\n              dropdownElement.nextElementSibling.scrollTop = selectedPosition;\n            }\n            var miniCart = document.getElementsByClassName('minicart');\n            var miniCartPopover = document.getElementsByClassName('popover')[0];\n            if (miniCart && miniCartPopover && miniCartPopover.className.indexOf('show') > -1) {\n              calculateOptionsPositionInModal(miniCart[0]);\n            }\n            var qviewModal = document.getElementById('quickViewModal');\n            if (qviewModal && qviewModal.className.indexOf('show') > -1) {\n              calculateOptionsPositionInModal(qviewModal.getElementsByClassName('attributes')[0]);\n            }\n            var editProductModal = document.getElementById('editProductModal');\n            if (editProductModal && editProductModal.className.indexOf('show') > -1) {\n              calculateOptionsPositionInModal(editProductModal.getElementsByClassName('attributes')[0]);\n            }\n          } else if (this.nextSibling) {\n            this.nextSibling.scrollTop = 0;\n          }\n\n          /** IE11 Support - add startsWith function for IE11 */\n          if (!String.prototype.startsWith) {\n            Object.defineProperty(String.prototype, 'startsWith', {\n              // eslint-disable-line\n              value: function value(search, rawPos) {\n                var pos = rawPos > 0 ? rawPos | 0 : 0;\n                return this.substring(pos, pos + search.length) === search;\n              }\n            });\n          }\n          /** END OF IE11 support */\n\n          var self = $(this);\n          $('body').on('keydown', function (event) {\n            if (self.hasClass('dropdown-opened')) {\n              self.parent().find('.select-items>div').each(function (index) {\n                if ($(this).text().trim().startsWith(String.fromCharCode(event.keyCode).toUpperCase())) {\n                  var elementTopPosition = $(this).outerHeight() * index;\n                  self.parent().find('.select-items').scrollTop(elementTopPosition);\n                  return false;\n                }\n                return true;\n              });\n            }\n          });\n        });\n      }\n      var invalidFeedbackElem = $(currentSelect).closest('.form-group').find('.invalid-feedback');\n      if (invalidFeedbackElem.length > 0) {\n        invalidFeedbackElem.remove();\n        $(currentSelect).closest('.form-group').append(invalidFeedbackElem);\n      }\n    }\n\n    // Change dropdown value on autofill\n    $(selectContainer).find('select').on('change', function () {\n      var $currentSelect = $(this);\n      var selectedOption = $currentSelect.children('option:selected');\n      var $customSelectSelected = $currentSelect.parent().find('.select-selected');\n      var $customOptionsContainer = $currentSelect.parent().find('.select-items');\n      $customSelectSelected.text(selectedOption.text());\n      $currentSelect.children('option').removeAttr('selected');\n      selectedOption.attr('selected', true);\n      $customOptionsContainer.find('.same-as-selected').removeClass('same-as-selected');\n      var styledOptionsList = $customOptionsContainer.children();\n      for (var r = 0; r < styledOptionsList.length; r++) {\n        if ($(styledOptionsList[r]).html() === selectedOption.html()) {\n          $(styledOptionsList[r]).addClass('same-as-selected selectable').attr('tabindex', '0');\n        }\n      }\n      var isInvalid = $currentSelect.hasClass('is-invalid') || $currentSelect.attr('aria-ivalid') === true;\n      $customSelectSelected.toggleClass('is-invalid', isInvalid);\n    });\n\n    // check for safari\n    var ua = navigator.userAgent.toLowerCase();\n    var isSafari = false;\n    if (ua.indexOf('safari') > -1 && ua.indexOf('chrome') === -1) {\n      isSafari = true;\n    }\n\n    // if the user clicks anywhere outside the select box or scroll, then close all select boxes\n    document.addEventListener('click', closeSelectComponents);\n    if (!isSafari) {\n      window.addEventListener('resize', closeSelectComponents);\n    }\n    $('.product-summary').on('scroll', closeSelectComponents);\n    $('#editProductModal .modal-body').on('scroll', closeSelectComponents);\n  },\n  hideMiniCart: function hideMiniCart(miniCartPopover) {\n    miniCartPopover.css('height', '0');\n    miniCartPopover.removeClass('show');\n    miniCartPopover.empty();\n    miniCartPopover.removeAttr('style');\n    $('.modal-background').hide();\n    $('.minicart-total.clicked').removeClass('clicked');\n    return false;\n  },\n  initAccordion: function initAccordion() {\n    var focusableElementsSelectors = 'button, [href], input:not([type=\"radio\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"]), .close-button';\n    $('.custom-accordion .content, .custom-accordion .card-body').each(function () {\n      var $this = $(this);\n      var $parent = $this.closest('.custom-accordion');\n      var outerHeight = $this.removeAttr('style').outerHeight();\n      $this.data('expanded', outerHeight);\n      var refinementsFocusableElements = $this.closest('.refinement').find(focusableElementsSelectors);\n      if (!$parent.hasClass('active')) {\n        $this.css('max-height', '0px');\n        refinementsFocusableElements.attr('tabindex', '-1');\n      } else {\n        $this.css('max-height', outerHeight);\n        refinementsFocusableElements.attr('tabindex', '0');\n      }\n    });\n  },\n  isDesktop: function isDesktop() {\n    return window.innerWidth >= TABLET_MAX_WIDTH;\n  },\n  disableScrollBehindPopup: function disableScrollBehindPopup(idModal) {\n    $(idModal).on('shown.bs.modal', function () {\n      $('html').addClass('scroll-lock-no-page-jump');\n    });\n    $(idModal).on('hidden.bs.modal', function () {\n      $('html').removeClass('scroll-lock-no-page-jump');\n    });\n    return false;\n  },\n  getAddressFormPopulateFields: function getAddressFormPopulateFields() {\n    return addressFormPopulateFields;\n  },\n  displayCollectionForm: function displayCollectionForm(selForm, shipping, collectionPointObj) {\n    var $selectedform = selForm;\n    var storeDetailsContent = $('.store-details-content', $selectedform);\n    /**\n    * Hide the list of Collection points\n    */\n    $('fieldset.collection-points-list-block').addClass('d-none');\n    $('.collection-point-name', $selectedform).text(collectionPointObj.name);\n    $('.collection-point-address', $selectedform).text(collectionPointObj.address1);\n    $('.collection-point-city-postcode', $selectedform).text(collectionPointObj.city + ' ' + collectionPointObj.postalCode);\n    var $imgTmpl;\n    if (collectionPointObj.provider === 'HERMES') {\n      $imgTmpl = $('#collectionPointHermesLogo').clone(true);\n    } else if (collectionPointObj.provider === 'DPD') {\n      $imgTmpl = $('#collectionPointDPDLogo').clone(true);\n    } else {\n      $imgTmpl = $('#collectionPointStoreLogo').clone(true);\n    }\n    $imgTmpl.show();\n    if (collectionPointObj.type !== 'store') {\n      storeDetailsContent.empty();\n    }\n    $('.selected-collection-point-logo-wrapper', $selectedform).html('');\n    $('.selected-collection-point-logo-wrapper', $selectedform).append($imgTmpl);\n\n    // will check if address one is more than the max field limit & if so, split it to address one and two.\n    var address1 = '';\n    var address2 = '';\n    var maxLength = $('#collectionPointAddressOne').attr('maxlength');\n    var collectionPointObjAddress1 = collectionPointObj.address1;\n    if (collectionPointObjAddress1.length > maxLength) {\n      var wordsArray = collectionPointObjAddress1.split(' ');\n      for (var word = 0; word < wordsArray.length; word++) {\n        if ((address1 + wordsArray[word]).length < maxLength) {\n          address1 += wordsArray[word] + ' ';\n        } else if (address2.length < maxLength) {\n          address2 += wordsArray[word];\n        }\n      }\n    } else {\n      address1 = collectionPointObjAddress1;\n    }\n    $('#collectionPointAddressOne', $selectedform).val(address1);\n    $('#collectionPointAddressTwo', $selectedform).val(address2);\n    $('#collectionPointAddressCity', $selectedform).val(collectionPointObj.city);\n    $('#collectionPointState', $selectedform).val('');\n    $('#collectionPointZipCode', $selectedform).val(collectionPointObj.postalCode);\n    if (collectionPointObj.provider !== 'STORE') {\n      $('.store-details-link-wrapper', $selectedform).addClass('d-none');\n    } else {\n      $('.store-details-link-wrapper', $selectedform).removeClass('d-none');\n    }\n\n    /**\n     * Set Shipping Method values\n     */\n    $('#collectionPointShippingMethod', $selectedform).val(shipping.selectedShippingMethod.ID);\n    $('.shipping-method-option .display-name', $selectedform).html(shipping.selectedShippingMethod.estimatedArrivalTime);\n    $('.shipping-method-option .shipping-cost', $selectedform).text(shipping.selectedShippingMethod.shippingCost.replace('.00', ''));\n\n    /**\n     * Show the form\n     */\n    $('.selected-collection-point-block').removeClass('d-none');\n    $('.selected-collection-point-form').removeClass('d-none');\n    $('.change-store-link-wrapper').removeClass('d-none');\n  },\n  getUserLocation: function getUserLocation() {\n    return new Promise(function (resolve, reject) {\n      if (navigator.permissions) {\n        navigator.permissions.query({\n          name: 'geolocation'\n        }).then(function (permission) {\n          if (permission.state === 'granted') {\n            navigator.geolocation.getCurrentPosition(function (position) {\n              resolve({\n                userLat: position.coords.latitude,\n                userLong: position.coords.longitude\n              });\n            });\n          } else {\n            resolve({\n              userLat: null,\n              userLong: null\n            });\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n  },\n  /**\n   * Function used to extract the required values from a Cookie's value string.\n   * @param {*} key Name of cookie\n   * @param {*} value Cookie value that should be fetched\n   * @returns {string} Filtered substring of the required value\n   */\n  getCookieValues: function getCookieValues(key, value) {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var tokens = cookies[i].split('=');\n      var cookieKey = tokens[0].trim();\n      if (cookieKey === key) {\n        if (!value) {\n          return cookies[i];\n        }\n        tokens = cookies[i].split('&');\n        for (var j = 0; j < tokens.length; j++) {\n          if (tokens[j].indexOf(value + '=') > -1) {\n            var val = tokens[j].substring(tokens[j].indexOf(value) + value.length + 1);\n            return val;\n          }\n        }\n      }\n    }\n    return '';\n  },\n  /**\n   * Creates the Data object that is to be pushed to the DL, based on the oneTrustCookie\n   * @param {string} oneTrustCookie\n   * @returns {Object} Object\n   */\n  createDataObject: function createDataObject(oneTrustCookie) {\n    var cookiesGroups = oneTrustCookie.split('%2C');\n    var groupConsents = {\n      data: {}\n    };\n    if (window.sessionStorage.getItem('userSetConsent')) {\n      groupConsents.event = 'consentUpdated';\n    }\n    $.each(cookiesGroups, function (index, cookieGroup) {\n      var cookieGroupArr = cookieGroup.split('%3A');\n      var cookieGroupID = cookieGroupArr[0];\n      var cookieGroupValue = cookieGroupArr[1];\n      groupConsents.data[cookieGroupID] = cookieGroupValue === '1' ? true : false;\n    });\n    return groupConsents;\n  }\n};\n\n//# sourceURL=webpack:///./cartridges/app_dune/cartridge/client/default/js/utils/utils.js?");

/***/ })

/******/ });